<?php 
namespace Apps\Components\Form;

use Cygnite\FormBuilder\Form;
use Cygnite\Foundation\Application;
use Cygnite\Common\UrlManager\Url;

/**
* Sample Form using Cygnite Form Builder
* This file generated by Cygnite CLI Generator.
* You may alter the code to fit your needs
*/

class CommentForm extends Form
{
    //set model object
    private $model;

    public $errors;

    private $segment;

    //set validator object
    public $validation;

    public function __construct($object = null, $segment = null)
    {
        // your model object
        $this->model = $object;
        $this->segment = $segment;
    }

    /**
     *  Build form and return object
     * @return CommentForm
     */
    public function buildForm()
    {
        $id = (isset($this->model->id)) ? $this->model->id : '';

        // Fllowing code is to display validation errors below the input box
        if (is_object($this->validation)) {
            $this->validator = $this->validation;// Errors will displayed below to inputs
            // Set your custom errors
            //$this->validator->setCustomError('column_name_error', 'Custom Error');
        }

        $this->open("CommentController", array(
                            "method" => "post", "id"     => "uniform", "role"   => "form",
                            "action" => Url::sitePath("comment/type/$id/$this->segment"),
                            "style" => "width:500px;margin-top:35px;float:left;" )
                            )		->addElement("label", "P Id", array("class" => "col-sm-2 control-label","style" => "width:100%;"))
		->addElement("text", "p_id", array(
                                      "value" => (isset($this->model->p_id)) ? $this->model->p_id : "",
                                      "class" => "form-control", )
                                   )
		->addElement("label", "F Name", array("class" => "col-sm-2 control-label","style" => "width:100%;"))
		->addElement("text", "f_name", array(
                                      "value" => (isset($this->model->f_name)) ? $this->model->f_name : "",
                                      "class" => "form-control", )
                                   )
		->addElement("label", "Post", array("class" => "col-sm-2 control-label","style" => "width:100%;"))
		->addElement("text", "post", array(
                                      "value" => (isset($this->model->post)) ? $this->model->post : "",
                                      "class" => "form-control", )
                                   )
		->addElement("label", "F Image", array("class" => "col-sm-2 control-label","style" => "width:100%;"))
		->addElement("text", "f_image", array(
                                      "value" => (isset($this->model->f_image)) ? $this->model->f_image : "",
                                      "class" => "form-control", )
                                   )
		->addElement("label", "Date Created", array("class" => "col-sm-2 control-label","style" => "width:100%;"))
		->addElement("text", "date_created", array(
                                      "value" => (isset($this->model->date_created)) ? $this->model->date_created : "",
                                      "class" => "form-control", )
                                   )
		->addElement("label", "Userip", array("class" => "col-sm-2 control-label","style" => "width:100%;"))
		->addElement("text", "userip", array(
                                      "value" => (isset($this->model->userip)) ? $this->model->userip : "",
                                      "class" => "form-control", )
                                   )
		->addElement("submit", "btnSubmit", array(
                                            "value" => "Save",
                                            "class" => "btn btn-primary",
                                            "style" => "margin-top:15px;" )
                                   )
		->close()
		->createForm();



        return $this;
    }

    /**
     * Render form
     * @return type
     */
    public function render()
    {
        return $this->getForm();
    }
}